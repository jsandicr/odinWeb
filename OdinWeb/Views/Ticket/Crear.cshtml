@model OdinWeb.Models.Obj.Ticket

@{
    ViewData["Title"] = "Crer Tiquete";
}

<style>
    .dropzone {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        cursor: pointer;
        position: relative; /* Añadido */
    }

    .file-container {
        background-color: #f2f2f2;
        padding: 10px;
        margin-bottom: 10px;
    }

    .file-item {
        position: relative;
        display: inline-block;
        margin: 10px;
        text-align: center;
        width: 120px;
    }

    .file-icon {
        width: 100%;
        height: 100px;
        border-radius: 10px;
        background-color: #f2f2f2;
        margin-bottom: 5px;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .file-info {
        font-size: 12px;
        color: #333;
        padding: 5px;
        text-align: center;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .file-info span {
        display: block;
    }

    .file-name {
        font-weight: bold;
        margin-bottom: 5px;
    }

    .file-size {
        margin-top: 5px;
    }

    .file-remove {
        position: absolute;
        top: 5px;
        right: 5px;
        width: 20px;
        height: 20px;
        background-color: #ccc;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        color: #333;
        cursor: pointer;
    }

</style>
<div class="col-md-12">
    <div class="tile">
        <div class="row">
            <div class="col-md-9">
                <h3 class="tile-title">Crear Tiquete</h3>
            </div>
            <div class="col-md-3">
                <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#verRequeri">Ver requisitos</button>
            </div>
        </div>
        <div class="tile-body">
            <form asp-action="Guardar" asp-controller="Ticket" method="post">
                <input type="hidden" asp-for="idService" value="@Model.service?.id">
                <div class="form-group">
                    <label asp-for="title" class="control-label"></label>
                    <input asp-for="title" class="form-control" type="text">
                </div>
                <div class="form-group">
                    <label asp-for="description" class="control-label"></label>
                    <input asp-for="description" class="form-control" rows="4">
                    <span asp-validation-for="description"></span>
                </div>
                <div class="form-group">
                    <label asp-for="estimatedDate" class="control-label"></label>
                    <input asp-for="estimatedDate" class="form-control" rows="4">
                    <span asp-validation-for="estimatedDate"></span>
                </div>
                <div>
                    <label>Seleccione el cliente</label>
                    @Html.DropDownList("idClient", (IEnumerable<SelectListItem>)ViewData["Clients"], new { @class = "form-control form-select mb-3", id = "clientDropdown" })
                </div>
                <div>
                    <label>Seleccione el supervisor</label>
                    @Html.DropDownList("idSupervisor", (IEnumerable<SelectListItem>)ViewData["Supervisors"], new { @class = "form-control form-select mb-3" })
                </div>
                <div>
                    <label>Seleccione el status</label>
                    @Html.DropDownList("idStatus", (IEnumerable<SelectListItem>)ViewData["Status"], new { @class = "form-control form-select mb-3" })
                </div>
                <div class="form-group subService" id="ubication">
                    <label asp-for="ubication" class="control-label"></label>
                    <input asp-for="ubication" class="form-control" rows="4" id="ubication">
                    <span asp-validation-for="ubication"></span>
                </div>
                <div class="dropzone" id="dropzone">
                    Arrastra y suelta los archivos aquí<br>
                    <small>O haz clic aqui para seleccionar archivos</small>
                    <input type="file" name="Archivos" id="fileInput" multiple style="display: none;">

                    <div id="fileList"></div>
                </div>
                <div class="tile-footer">
                    <button class="btn btn-primary" type="submit"><i class="fa fa-fw fa-lg fa-check-circle"></i>Crear</button>&nbsp;&nbsp;&nbsp;<a class="btn btn-secondary" asp-action="TiquetesProcesoAS" asp-controller="Ticket"><i class="fa fa-fw fa-lg fa-times-circle"></i>Cancelar</a>
                </div>
            </form>
        </div>
    </div>
</div>
@section modals{

    <div class="modal" id="verRequeri">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Requisitos del servicio</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <p>@Model.service.requirements</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            // Almacenar las opciones originales del DropDownList
            var originalOptions = $("#clientDropdown option");

            // Manejar el evento keyup para la búsqueda
            $("#clientDropdown").on("keyup", function () {
                var searchText = $(this).val().toLowerCase();

                // Filtrar las opciones según el texto de búsqueda
                var filteredOptions = originalOptions.filter(function () {
                    return $(this).text().toLowerCase().indexOf(searchText) > -1;
                });

                // Limpiar el DropDownList y agregar las opciones filtradas
                $(this).empty().append(filteredOptions);

                // Si el campo de búsqueda está vacío, restaurar todas las opciones
                if (searchText === "") {
                    $(this).append(originalOptions);
                }
            });
        });
        var service = document.getElementById('service');
        var ubication = document.getElementById('ubication');

        service.addEventListener("change", function () {
            var selectedOption = this.options[this.selectedIndex];
            var selectedValue = selectedOption.value;

            $.ajax({
                url: '/Servicio/GetServiceById/'+selectedValue,
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.transport) {
                        ubication.classList.remove("subService");
                    } else {
                        ubication.classList.add("subService");
                        ubication.value = null;
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });

        $(document).ready(function () {
            $('.modal').on('click', function () {
                $('.modal').modal('hide');
            });
        });

        var fileInput = document.getElementById('fileInput');
        var fileList = document.getElementById('fileList');
        var dropzone = document.getElementById('dropzone');
        var files = [];

        dropzone.addEventListener('click', function () {
            fileInput.click();
        });

        dropzone.addEventListener('dragover', function (event) {
            event.preventDefault();
            dropzone.classList.add('dragover');
        });

        dropzone.addEventListener('dragleave', function () {
            dropzone.classList.remove('dragover');
        });

        dropzone.addEventListener('drop', function (event) {
            event.preventDefault();
            dropzone.classList.remove('dragover');

            var droppedFiles = event.dataTransfer.files;
            handleFiles(droppedFiles);
        });

        fileInput.addEventListener('change', function (event) {
            var selectedFiles = event.target.files;
            handleFiles(selectedFiles);
        });

        function handleFiles(selectedFiles) {
            fileList.innerHTML = '';
            files = [];

            for (var i = 0; i < selectedFiles.length; i++) {
                var file = selectedFiles[i];
                files.push(file);
                addFileToList(file);
            }
        }

        function addFileToList(file) {
            var fileItem = document.createElement('div');
            fileItem.classList.add('file-item');

            var fileContainer = document.createElement('div');
            fileContainer.classList.add('file-container');

            var fileName = document.createElement('span');
            fileName.classList.add('file-name');
            fileName.textContent = file.name;

            var fileSize = document.createElement('span');
            fileSize.classList.add('file-size');
            fileSize.textContent = getFileSize(file.size);

            var fileRemove = document.createElement('div');
            fileRemove.classList.add('file-remove');
            fileRemove.innerHTML = '&times;';
            fileRemove.addEventListener('click', function () {
                removeFileFromFileList(file);
                fileItem.remove();
            });

            fileContainer.appendChild(fileName);
            fileContainer.appendChild(fileSize);
            fileItem.appendChild(fileContainer);
            fileItem.appendChild(fileRemove);
            fileList.appendChild(fileItem);
        }

        function removeFileFromFileList(file) {
            var index = files.indexOf(file);
            if (index !== -1) {
                files.splice(index, 1);
            }
        }

       
    </script>
}